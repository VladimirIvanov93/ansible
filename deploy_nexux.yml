---
- name: Deploy Nexus Repository Manager
  hosts: localhost
  become: yes
  tasks:
    - name: Install required packages
      apt:
        name:
          - openjdk-11-jdk
          - wget
          - unzip
        state: present
      when: ansible_os_family == "Debian"

    - name: Create nexus user
      user:
        name: nexus
        system: yes
        shell: /bin/false
        home: /opt/nexus

    - name: Download Nexus Repository Manager
      get_url:
        url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
        dest: /opt/nexus/latest-unix.tar.gz

    - name: Extract Nexus Repository Manager
      unarchive:
        src: /opt/nexus/latest-unix.tar.gz
        dest: /opt/nexus/
        remote_src: yes

    - name: Change ownership of Nexus folder
      file:
        path: /opt/nexus/nexus-3*
        owner: nexus
        group: nexus
        state: directory
        recurse: yes

    - name: Create Nexus data directory
      file:
        path: /nexus-data
        state: directory
        owner: nexus
        group: nexus

    - name: Create a systemd service file for Nexus
      copy:
        dest: /etc/systemd/system/nexus.service
        content: |
          [Unit]
          Description=Nexus Repository Manager
          After=network.target

          [Service]
          Type=simple
          User=nexus
          ExecStart=/opt/nexus/nexus-3*/bin/nexus run
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Start and enable Nexus service
      systemd:
        name: nexus
        state: started
        enabled: yes

    - name: Update firewall rules (if using UFW)
      ufw:
        rule: allow
        name: "Nexus"
        port: 8081

    - name: Ensure Nexus is running
      uri:
        url: http://localhost:8081
        return_content: yes
      register: result

    - name: Fail if Nexus did not start correctly
      fail:
        msg: "Nexus did not start correctly"
      when: "'Nexus Repository Manager' not in result.content"
